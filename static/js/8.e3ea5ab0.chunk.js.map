{"version":3,"sources":["Components/workSpaceComps/Info/Info_Instructions_Option.js"],"names":["Info_Instructions","props","state","smallArticle","marginBottom","configInfo","btn","classes","classList","contains","forEach","item","document","querySelector","add","remove","className","style","onClick","e","clkdBtn","undefined","target","dataset","type","parentElement","infoFunct","data-type","marginLeft","margin","marginRight","React","Component"],"mappings":"oLAEMA,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,qDAOd,IAAIC,EAAe,CACjBC,aAAc,UAIhB,SAASC,EAAWC,EAAIC,GAEnBD,EAAIE,UAAUC,SAAS,SAExB,CAAC,MAAM,gBAAgBC,SAAS,SAAAC,GAAI,OAAIC,SAASC,cAAc,mBAAmBL,UAAUM,IAAIH,MAChGC,SAASC,cAAc,mBAAmBL,UAAUO,OAAO,MAG3DH,SAASC,cAAcN,GAASC,UAAUO,OAAO,gBACjDH,SAASC,cAAcN,GAASC,UAAUM,IAAI,MAG9CF,SAASC,cAAc,gBAAgBL,UAAUM,IAAI,OAAQF,SAASC,cAAc,gBAAgBL,UAAUO,OAAO,MACrHT,EAAIE,UAAUO,OAAO,OAAQT,EAAIE,UAAUM,IAAI,OAqBrD,OACI,8BACI,sBAAKE,UAAU,yDAAf,UAEE,sBAAKA,UAAU,iCAAf,UAEE,0BAASA,UAAU,0CAAnB,UACE,sBAAKA,UAAU,4BAA4BC,MAAOd,EAAlD,UACE,oBAAIa,UAAU,+BAAd,8BACA,mBAAGA,UAAU,0BAAb,gQAMF,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,+BAAd,gCACA,mBAAGA,UAAU,0BAAb,4EAMJ,0BAASA,UAAU,yDAAnB,UACE,sBAAKA,UAAU,gCAAgCC,MAAOd,EAAtD,UACE,oBAAIa,UAAU,mCAAd,6BACA,mBAAGA,UAAU,8BAAb,gIAKF,sBAAKA,UAAU,qCAAf,UACE,oBAAIA,UAAU,wCAAd,yBACA,mBAAGA,UAAU,mCAAb,uOAOJ,0BAASA,UAAU,kEAAnB,UACE,sBAAKA,UAAU,qCAAf,UACE,oBAAIA,UAAU,wCAAd,yBACA,mBAAGA,UAAU,mCAAb,oGAKF,sBAAKA,UAAU,yCAAf,UACE,oBAAIA,UAAU,4CAAd,kCACA,mBAAGA,UAAU,uCAAb,mIAKF,sBAAKA,UAAU,sCAAf,UACE,oBAAIA,UAAU,yCAAd,uBACA,mBAAGA,UAAU,oCAAb,4GAKF,sBAAKA,UAAU,oCAAf,UACE,oBAAIA,UAAU,uCAAd,mCACA,mBAAGA,UAAU,kCAAb,sGAON,sBAAKA,UAAU,6BAA6BE,QAAS,SAACC,GAAD,OAxF7D,SAAmBA,GAEjB,IAAIC,OAAoCC,GAAzBF,EAAEG,OAAOC,QAAQC,KAAqBL,EAAEG,OAASH,EAAEG,OAAOG,cAEvE,OAAOL,EAAQG,QAAQC,MACrB,IAAK,QACHnB,EAAWe,EAAQ,eACnB,MACF,IAAK,SACHf,EAAWe,EAAQ,gBACnB,MACF,IAAK,KACHf,EAAWe,EAAQ,aA4EyCM,CAAUP,IAAtE,UACE,wBAAQH,UAAU,0CAA0CW,YAAU,QAAQV,MAAO,CAACW,WAAY,QAAlG,SAA2G,2CAC3G,wBAAQZ,UAAU,4CAA4CW,YAAU,SAASV,MAAO,CAACY,OAAQ,UAAjG,SAA4G,4CAC5G,wBAAQb,UAAU,qDAAyDW,YAAU,KAAKV,MAAO,CAACa,YAAa,QAA/G,SAAwH,gE,UAzH1GC,EAAMC,WAqIrBhC","file":"static/js/8.e3ea5ab0.chunk.js","sourcesContent":["import React from 'react'\n\nclass Info_Instructions extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    render() {\n\n        var smallArticle = {\n          marginBottom: \"-100px\"\n        }\n\n        //hide previous article and turn on new btn / turn off prv btn \n        function configInfo(btn,classes){\n          //debugger;\n          if(btn.classList.contains(\"off\")){\n            //hide previous displayed article \n            [\"off\",\"display-none\"].forEach( item => document.querySelector(\"article.info.on\").classList.add(item) )\n            document.querySelector(\"article.info.on\").classList.remove(\"on\");\n\n            //display clicked article\n            document.querySelector(classes).classList.remove(\"display-none\");\n            document.querySelector(classes).classList.add(\"on\");\n        \n            //toggle select button as appropriate\n            document.querySelector(\".info.btn.on\").classList.add(\"off\"); document.querySelector(\".info.btn.on\").classList.remove(\"on\");\n            btn.classList.remove(\"off\"); btn.classList.add(\"on\");\n          }\n        }\n        //devipher which button/article to hide/display\n        function infoFunct(e){\n\n          var clkdBtn = (e.target.dataset.type != undefined) ? e.target : e.target.parentElement; //make clkdBtn always equal the actual button, not any inner content (eg span)\n\n            switch(clkdBtn.dataset.type){\n              case \"audio\": \n                configInfo(clkdBtn,\".audio.info\")\n                break;\n              case \"vision\":\n                configInfo(clkdBtn,\".vision.info\")\n                break;\n              case \"AV\":\n                configInfo(clkdBtn,\".av.info\")\n                break;\n          }\n        }\n        \n      return (\n          <div>\n              <div className=\" info-instructions-wrap tool-element-wrap display-none\">\n                \n                <div className=\"info-instructions-article-wrap\">\n                  {/* audio article */}\n                  <article className=\"info info-instructions-article audio on\">\n                    <div className=\"instructions-blob-wrap sg\" style={smallArticle}>\n                      <h3 className=\"audio instructions-header sg\">Signal Generator</h3>\n                      <p className=\"audio instructions-p sg\">\n                        Choose if you want a constant tone or a tone sweep test(low to high or high to low),\n                        pick your source tone, then if youâ€™re using a constant tone, \n                        decide on the frequency spectrum you wish to hear (this will be disabled in sweep mode).\n                      </p>\n                    </div>\n                    <div className=\"instructions-blob-wrap rp\">\n                      <h3 className=\"audio instructions-header rp\">Recording Playback</h3>\n                      <p className=\"audio instructions-p rp\">\n                        Choose between 10 sounds of both music and voice to play\n                      </p>\n                    </div>\n                  </article>\n                  {/* vision article */}\n                  <article className=\"info info-instructions-article vision display-none off\">\n                    <div className=\"instructions-blob-wrap gs-rgb\" style={smallArticle}>\n                      <h3 className=\"audio instructions-header gs-rgb\" >Greyscale &#38; RGB</h3>\n                      <p className=\"audio instructions-p gs-rgb\">\n                        Turn your monitor into either a greyscale or RGB color pattern. Click the screen to enter into full screen mode\n                      </p>\n                    </div>\n\n                    <div className=\"instructions-blob-wrap solid-color\">\n                      <h3 className=\"audio instructions-header solid-color\">Solid Color</h3>\n                      <p className=\"audio instructions-p solid-color\">\n                      Test your monitor by inidivually viewing all the colors from the RGB pattern in solid fullscreen format,\n                      Hold your mouse on the screen for 3 seconds to enter/exit fullscreen mode and single click to change color\n                      </p>\n                    </div>\n                  </article>\n                  {/* av article */}\n                  <article className=\"info info-instructions-article av audio&#38;vision display-none off\">\n                    <div className=\"instructions-blob-wrap music-video\">\n                      <h3 className=\"audio instructions-header music-video\">Music Video</h3>\n                      <p className=\"audio instructions-p music-video\"> \n                      Sit back and enjoy a classic music video while testing your screen and audio system\n                      </p>\n                    </div>\n\n                    <div className=\"instructions-blob-wrap freq-visualiser\">\n                      <h3 className=\"audio instructions-header freq-visualiser\">Frequency Visualiser</h3>\n                      <p className=\"audio instructions-p freq-visualiser\"> \n                      Run a full spectrum audio frequency sine sweep test with visuals to guide you of where the current frequency is at\n                      </p>\n                    </div>\n\n                    <div className=\"instructions-blob-wrap gravity-ball\">\n                      <h3 className=\"audio instructions-header gravity-ball\">Sync test</h3>\n                      <p className=\"audio instructions-p gravity-ball\">\n                      Audio video sync test to help adjust latency between speakers and sync your video and audio\n                      </p>\n                    </div>\n\n                    <div className=\"instructions-blob-wrap left-right\">\n                      <h3 className=\"audio instructions-header left-right\">Left-right audio test</h3>\n                      <p className=\"audio instructions-p left-right\">\n                      Left right speaker test, to make sure your speakers are capable of stereo audio \n                      </p>\n                    </div>\n                  </article>\n                </div>\n\n                <div className=\"info-instructions-btn-wrap\" onClick={(e) => infoFunct(e)}>\n                  <button className=\"btn info info-instructions-btn audio on\" data-type=\"audio\" style={{marginLeft: \"25px\"}}><span>Audio</span></button>\n                  <button className=\"btn info info-instructions-btn vision off\" data-type=\"vision\" style={{margin: \"0 25px\"}}><span>Vision</span></button>\n                  <button className=\"btn info info-instructions-btn Audio&#38;Vision av off\" data-type=\"AV\" style={{marginRight: \"25px\"}}><span>Audio &#38; Vision</span></button>\n                </div>\n\n              </div>\n          </div>\n      );\n    }\n  }\n\n\n  \n\n  export default Info_Instructions"],"sourceRoot":""}