{"version":3,"sources":["Components/workSpaceComps/Vision/Vision_Solid_Option.js"],"names":["freeze","Vision_Solid","props","state","fsConfig","console","log","fsMdeTrgr","document","querySelector","addEventListener","timer","setInterval","fullscreenFunct","setTimeout","ifFsExited","window","innerHeight","screen","height","clearInterval","colorArray","cntr","className","onClick","style","background","length","backgroundColor","React","Component"],"mappings":"oMAIIA,GAAS,EACPC,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,gEAQd,IAAIC,EAAW,CAAED,MAAO,OACxBE,QAAQC,IAAI,mBAAqBF,EAASD,OAC1C,IAAII,EAAY,GAChBC,SAASC,cAAc,eAAeC,iBAAiB,aAAa,WAGlE,IAAIC,EAAQ,EACZJ,EAAYK,aAAY,WAEV,KADZD,IAMsB,OAAlBP,EAASD,OACXU,YAAgBL,SAASC,cAAc,gBAAiBL,EAASD,MAAQ,KAGzEW,YAAW,WAET,IAAIC,EAAaH,aAAY,WAExBI,OAAOC,aAAeD,OAAOE,OAAOC,SACrCf,EAASD,MAAQ,MACjBiB,cAAcL,MAEf,MACF,MAGqB,MAAjBX,EAASD,OAAgBU,YAAgBL,SAASC,cAAc,gBArB1CT,GAAS,KACvC,QAwBLQ,SAASC,cAAc,eAAeC,iBAAiB,WAAW,WAChEU,cAAcb,GACdO,YAAW,WAAqB,GAAVd,IAAgBA,GAAS,KAAU,U,+BAUzD,IAAIqB,EAAa,CAAC,SAAS,OAAO,aAAa,OAAO,MAAM,SAAS,OAAO,QAAQ,SAChFC,EAAO,EAqBf,OAdGd,SAASC,cAAc,eAetB,8BACI,qBAAKc,UAAU,+DAAf,SACE,qBAAKA,UAAU,aAAaC,QAAS,WAXJ,GAAVxB,IAC7BQ,SAASC,cAAc,eAAegB,MAAMC,WAAaL,EAAWC,KACpEA,GACWD,EAAWM,SAAQL,EAAO,KAQ4BG,MAAO,CAACG,gBAAiB,mB,GAhFzEC,IAAMC,WAyFhB7B","file":"static/js/9.f04d568a.chunk.js","sourcesContent":["import React from 'react'\nimport {fullscreenFunct} from '../../Tools/codeTools'\n\n\nvar freeze = false;\nclass Vision_Solid extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    componentDidMount(){\n    //DOUBLE CLICK FULLSCREEN \n        //dlb click to toggle full screen mode on/off \n        var fsConfig = { state: \"off\" }\n        console.log(\"dbl click method\" + fsConfig.state)\n        var fsMdeTrgr = '';\n        document.querySelector(\".solid-node\").addEventListener(\"mousedown\", () => {\n          \n          //mousedown, once down for 2 seconds, enter full screen mode, freeze = true so color doesnt change, 500ms later freeze = false\n          var timer = 0;\n          fsMdeTrgr = setInterval(() => {\n            timer++\n            if(timer == 3) { fsFunction(); freeze = true;}\n          }, 500);\n\n          debugger;\n          function fsFunction(){\n            if (fsConfig.state == \"off\") {\n              fullscreenFunct(document.querySelector(\".solid-node\")); fsConfig.state = \"on\";\n\n              //once user has entered fs mode, constantly check for if the user has exited fullscreen mode, if so  set fsConfig.state = \"off\"\n              setTimeout(() => {\n                debugger;\n                var ifFsExited = setInterval(() => {\n                  debugger;\n                  if(window.innerHeight != window.screen.height) {\n                    fsConfig.state = \"off\"; \n                    clearInterval(ifFsExited)\n                  } \n                }, 20);\n              }, 5000);\n\n            } //turn fs on if its off \n            else if (fsConfig.state ==\"on\") { fullscreenFunct(document.querySelector(\".solid-node\")) /*fsConfig.state = \"off\"*/ } //turn fs off if its on\n        }\n      });\n\n        document.querySelector(\".solid-node\").addEventListener(\"mouseup\", () => {\n          clearInterval(fsMdeTrgr);\n          setTimeout(() => { if(freeze == true) freeze = false; }, 500);\n        });\n    }\n\n\n    render() {\n    //COLOR TOGGLE\n      //each \"click\" will show a new colour by sorting through an array, using an integret, when it hits a certain number, the integer goes back to 0 \n      \n      //solidClrNode.addEventListener(\"click\", solidClrSort ) \n          var colorArray = [\"yellow\",\"cyan\",\"lightgreen\",\"pink\",\"red\",\"purple\",\"grey\",\"black\",\"white\"];\n          var cntr = 0;\n\n      //change color by selecting an array item with current counter value, once counter exceeds the colorArray.length, reset counter to 0\n      var dblClickCntr = 0;\n      //var freeze = false;\n      var prvDbl = 0;\n\n      if(document.querySelector(\".solid-node\")){\n\n      }\n\n      function solidClrSort(){\n   \n        if(/*userDblClkd != true && */ freeze == false /* && hasBeenDblClkd == false*/ ){\n          document.querySelector(\".solid-node\").style.background = colorArray[cntr];\n          cntr++\n          if(cntr >= colorArray.length) cntr = 0; // so once colorArray becomes +1 of the colorArray.length, reset cntr\n        }\n\n      }\n\n      return (\n          <div>\n              <div className=\"vision-solid-wrap vision-tool tool-element-wrap display-none\">\n                <div className=\"solid-node\" onClick={() => solidClrSort()} style={{backgroundColor: \"white\", /*zIndex: 1000*/} }></div>\n              </div>\n          </div>\n      );\n    }\n  }\n\n\n\n  export default Vision_Solid"],"sourceRoot":""}