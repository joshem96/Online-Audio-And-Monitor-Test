{"version":3,"sources":["Components/Tools/codeTools.js","Assets/Sounds/Noise/white-noise-tone.mp3","Assets/Sounds/Noise/pink-noise-tone.mp3","Assets/Sounds/Noise/White_Noise_High2Low.wav","Assets/Sounds/Noise/White_Noise_Low2High.wav","Assets/Sounds/Noise/Pink_Noise_Low2High.wav","Assets/Sounds/Noise/Pink_Noise_High2Low.wav","Assets/Sounds/Noise/Sine_Wave_Low2High.wav","Assets/Sounds/Noise/Sine_Wave_High2Low.wav","Components/workSpaceComps/Audio/Audio_Functions/Audio_Sg_Init.js","logo.svg","Components/Logo.js","Components/NavBarJsFunctions/ytAudioStop.js","Components/NavBarJsFunctions/DisplaySwitching.js","Components/DwNav.js","Components/NavBarJsFunctions/NavigationCode.js","Components/Navbar.js","Components/Header.js","Components/workSpaceComps/Info/Info_About_Option.js","Components/workSpaceComps/Info/Info_WS.js","Components/workSpaceComps/Info/Info_Contact_Option.js","Components/workSpaceComps/Info/Info_Privacy_Option.js","Components/workSpaceComps/Parent_WS.js","App.js","reportWebVitals.js","index.js"],"names":["makeETarget","e","target","classList","contains","parentElement","displayNoneToggle","element","remove","add","noSpace","x","firstArray","i","length","push","oldWord","toString","newWord","slctdParentNav","slctdChildNav","makeSelectedNav","curLmnt","document","querySelector","window","innerWidth","skip","children","fullscreenFunct","docElm","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","webkitRequestFullScreen","mozRequestFullScreen","requestFullscreen","msRequestFullscreen","sineWaveLowsNode","sineWaveMidsNode","sineWaveHighsNode","sinewaveNodeArray","AudioContext","destination","sgConfig","initSgConfing","stateType","character","AXSource","frequency","state","React","Component","prvVid","ytAudioChk","tabType","eTarget","innerHTML","trgtIsAv","includes","srcdoc","undefined","src","curNavState","prvSlctdNav","updateBrowsingState","setTimeout","hasLoaded","ytAudioHandle","dataset","toolType","Browsing","Array","innerText","forEach","item","CurrentToolString","currentToolNav","CurrentToolPage","console","log","updateCurrentState","navType","checkImg","data","query","visionTool","DropdownNav","props","clsDrpDwn","bind","liConfig","this","style","right","propsArray","Object","keys","key","className","map","option","index","data-tool-type","onClick","ParentNavBar","navClickFunct","adptvTabFunct","dsktpDrpDwnFunct","_adptvNavWrap","adptvTab","querySelectorAll","adptvTabCode","navWrap","selectedDrpDwn","dsktpDrpDwnCode","id","aria-label","position","padding","left","top","transform","display","type","toolTitle","fontSize","dropDown","extra","ref","adptvNavWrap","zIndex","visibility","tabClose","MainNavChild","insertDropDown","adptvDropDown","ConfigNavTools","optionOne","optionTwo","optionThree","OptionFour","childStyles","alignItems","flexDirection","height","justifyContent","margin","Header","instaIcon","icon","faInstagram","size","color","githubIcon","faGithub","Info_Footer","href","title","Info_About","Info_Instructions","lazy","InfoWorkSpace","fallback","AudioWorkSpace","AVWorkSpace","VisionWorkSpace","initMount","ParentWorkSpace","renderLoader","Audio","Vision","AV","tool","setState","addEventListener","changeState","width","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e954d47.chunk.js","sourcesContent":["//CODE TOOLS\n//.................................................................\n    //MAKE ETARGET\n    //make eTarget var for when the focus elmnt is a wrap with children\n    function makeETarget(e){\n        if (e.target.classList.contains(\"wrap\")){ return e.target }\n        else if (e.target.parentElement.classList.contains(\"wrap\")){ return e.target.parentElement }\n        else if (e.target.parentElement.parentElement.classList.contains(\"wrap\")){ return e.target.parentElement.parentElement }\n        else if (e.target.parentElement.parentElement.parentElement.classList.contains(\"wrap\")){ return e.target.parentElement.parentElement.parentElement }\n        else if (e.target.parentElement.parentElement.parentElement.parentElement.classList.contains(\"wrap\")){ return e.target.parentElement.parentElement.parentElement.parentElement }\n    }\n\n//.................................................................\n    //TOGGLE DISPLAY NONE\n    function displayNoneToggle(element){\n        if (!element.classList.contains(\"display-none\")){\n            element.classList.add(\"display-none\");\n        }\n        else if (element.classList.contains(\"display-none\")){\n            element.classList.remove(\"display-none\");\n        }\n    } export {displayNoneToggle}\n//...................................................................\n    //REMOVE SPACES FROM STRING\n    function noSpace(x){\n        var firstArray = [];\n        var noStringArray = \"\";\n        \n        for (var i = 0; i < x.length; i++){\n            firstArray.push(x[i]);\n            if (firstArray[i] === \" \"){\n                delete firstArray[i];\n            } \n        }\n        \n        noStringArray = firstArray.toString();\n        var oldWord = noStringArray;\n        var newWord = \"\";\n        \n        for (var i = 0; i < oldWord.length; i++){\n            if (oldWord[i] === \",\"){\n        \n            }\n            else{\n                    newWord = newWord + oldWord[i];\n                }\n        }\n        \n        return newWord;\n    } export {noSpace}\n//.................................................................\n    //UNSELECTED => SELECTED FUNCTION\n    var slctdParentNav = ''; // pertains to the drop down wrap of the selected nav (eg visions clicked drop down wrap) (originally selectedDropDown)\n    var slctdChildNav = ''; //child nav of the parent nav (rgb of vision) \n    const makeSelectedNav = (e) => {\n//debugger;\n        var curLmnt = (() => {\n            return e.target.classList.contains(\"drp-dwn-child\") ? e.target : e.target.parentElement;  \n        })();\n\n        switch(curLmnt){\n            //IF TARGET IS NAV CHILD\n            case e.target: {\n                 \n                //if user is clicking on a nav btn and that btn isn't currently selected\n                if (curLmnt.classList.contains(\"unselected\")){\n                    if (slctdChildNav != ''){ //so this is not the first time a tab has been clicked\n                        slctdChildNav.classList.remove(\"selected\");\n                        slctdChildNav.classList.add(\"unselected\");\n                    }\n                    slctdChildNav = curLmnt;\n                    slctdChildNav.classList.add(\"selected\"); \n                    slctdChildNav.classList.remove(\"unselected\"); \n                }\n\n                //force \".selected\" styling onto the nav that currently has a child selected\n                if (document.querySelector(\".selectedImportant\") !== null){\n                    document.querySelector(\".selectedImportant\").classList.remove(\"selectedImportant\");\n                }\n\n                slctdParentNav.classList.add(\"selectedImportant\");\n\n                //THOUGHT I NEEDED THIS AT THE TIME\n                //if in adaptive mode, close tab once nav child has been clicked\n                // if(document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"open\")){\n                //     document.querySelector(\"#adaptive-nav-wrap\").style = \"\";\n                //     document.querySelector(\"#adaptive-nav-wrap\").classList.remove(\"opened\");\n                //     document.querySelector(\"#adaptive-nav-wrap\").classList.add(\"closed\");\n                // }\n\n                // *SPECIAL* if navchild clicked, close adaptive tab and hide drp-dwn-active-lmnt\n                if(window.innerWidth < 1000){\n                    if(document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"opened\")){\n                        document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n                        document.querySelector(\"#adaptive-nav-wrap\").classList.remove(\"opened\");\n                        document.querySelector(\"#adaptive-nav-wrap\").classList.add(\"closed\")\n                    }\n                }\n\n                break;\n            }\n            //IF TARGET IS NAV PARENT\n            case e.target.parentElement: {\n                \n                //if(!curLmnt.classList.contains(\"Audio\")) { e.target.parentElement.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\"); }\n                var skip = false; // used to skip over subsqeuent if statmements if Audio btn is clicked\n\n                //if clicking audio btn and another nav had been selected previously\n                if(curLmnt.classList.contains(\"Audio\") && curLmnt.classList.contains(\"unselected\") && slctdChildNav != ''){\n                    slctdChildNav.classList.remove(\"selected\");\n                    slctdChildNav.classList.add(\"unselected\");\n                    if(document.querySelector(\".selectedImportant\") != null){\n                        document.querySelector(\".selectedImportant\").classList.remove(\"selectedImportant\");\n                    }\n                    curLmnt.classList.add(\"selectedImportant\");\n                }\n                //if audio is already selected an is clicked again\n                else if(curLmnt.classList.contains(\"Audio\") && curLmnt.classList.contains(\"selected\")){\n                    // [\"selectedImportant\",\"selected\"].forEach( item => curLmnt.classList.remove(item));\n                    // curLmnt.classList.add(\"unselected\");    \n                    skip = true;\n                }\n//HERHERHERHE\n                //if user is clicking on a nav btn and that btn isn't currently selected\n                if (curLmnt.classList.contains(\"unselected\") && !skip){\n                    //if another another nav child was selected previously\n                    if(document.querySelector(\".drp-dwn-active-lmnt\")) document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n                    //if curLmnt is not audio nav\n                    if(!curLmnt.classList.contains(\"Audio\")) {\n                        debugger\n                        //depending whether or not use is on a responsive device\n                        //e.target.parentElement.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\") (bottom code original)\n                        (/*document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"closed\")*/ window.innerWidth > 1000) ? \n                        e.target.parentElement.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\") :\n                        e.target.parentElement.parentElement.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\");\n                    }\n                     //so this is not the first time a tab has been clicked\n                    if (slctdParentNav != ''){\n                        slctdParentNav.classList.remove(\"selected\");\n                        slctdParentNav.classList.add(\"unselected\");\n                    }\n                    slctdParentNav = curLmnt;\n                    slctdParentNav.classList.add(\"selected\"); \n                    slctdParentNav.classList.remove(\"unselected\");\n                    if(curLmnt.classList.contains(\"Audio\")){\n                        curLmnt.classList.add(\"selectedImportant\");\n                    }\n                }\n                //user clicking out of currently selected option without a selected nav child\n                else if (curLmnt.classList.contains(\"selected\") && !curLmnt.classList.contains(\"selectedImportant\") && !skip){\n                    \n                    if(!curLmnt.classList.contains(\"Audio\")) {\n\n                        //depending whether or not user is on a responsive device\n                        (window.innerWidth > 1000) ? \n                        e.target.parentElement.parentElement.children[1].classList.remove(\"drp-dwn-active-lmnt\") : //desktop\n                        e.target.parentElement.parentElement.parentElement.children[1].classList.remove(\"drp-dwn-active-lmnt\"); //responsive\n                    }\n                    slctdParentNav.classList.remove(\"selected\");\n                    slctdParentNav.classList.add(\"unselected\");\n//RIGHT HERERE\n                    //if .selectedImportant doesn't contain selected, add .selected\n                    if (document.querySelector(\".selectedImportant\") && document.querySelector(\".selectedImportant\").classList.contains(\"unselected\")){\n                        document.querySelector(\".selectedImportant\").classList.remove(\"unselected\");\n                        document.querySelector(\".selectedImportant\").classList.add(\"selected\");\n                        //change slctdParentNav back to orginally selected parent Nav\n                        slctdParentNav = document.querySelector(\".selectedImportant\");\n                    }\n                }\n                //if nav child has previously been selected and its tab closed and then opened again or vice versa \n                else if (curLmnt.classList.contains(\"selectedImportant\") && document.querySelector(\".drp-dwn-child.selected\")){\n                    // opened -> closed\n                    if (document.querySelector(\".drp-dwn-active-lmnt.display-none\")){\n                        document.querySelector(\".drp-dwn-active-lmnt.display-none\").classList.remove(\"drp-dwn-active-lmnt\");\n                    }\n                    //closed -> opened\n                    else{\n                        (/*document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"closed\")*/window.innerWidth > 1000) ? \n                        curLmnt.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\") :  //desktop code\n                        curLmnt.parentElement.parentElement.children[1].classList.add(\"drp-dwn-active-lmnt\");   \n                    }\n                }\n                break;\n            }\n        }\n\n    }\n\n//..........................................................\n//ENTER FULLSCREEN MODE FOR ALL BROWSERS\nfunction fullscreenFunct(docElm) {\n    var isInFullScreen = (document.fullscreenElement && document.fullscreenElement !== null) ||\n        (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||\n        (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||\n        (document.msFullscreenElement && document.msFullscreenElement !== null);\n\n    //var docElm = document.documentElement;\n    if (!isInFullScreen) {\n        if (docElm.webkitRequestFullScreen) {\n            docElm.webkitRequestFullScreen();\n        } else if (docElm.mozRequestFullScreen) {\n            docElm.mozRequestFullScreen();\n        } else if (docElm.requestFullscreen) {\n            docElm.requestFullscreen();\n        } else if (docElm.msRequestFullscreen) {\n            docElm.msRequestFullscreen();\n        }\n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    }\n}\n    export {makeSelectedNav, makeETarget, fullscreenFunct}\n\n//if I click a nav, and then click it's child nav\n    //make the parent nav (eg vision) get a class of selectedImportant (same style as selected only now its forced on)\n//when I click another nav and then its child,\n    // remove selectedImportant from its current element and add onto newly selected element\n\n\n    //..\n    //when you click nav child the drop down needs to close. use the same code as if you were cliking the nav parent\n    //.drp-dwn-actv-lmnt needs to go when above action happens as well","export default __webpack_public_path__ + \"static/media/white-noise-tone.ee84f655.mp3\";","export default __webpack_public_path__ + \"static/media/pink-noise-tone.beba3b2c.mp3\";","export default __webpack_public_path__ + \"static/media/White_Noise_High2Low.a2f8f113.wav\";","export default __webpack_public_path__ + \"static/media/White_Noise_Low2High.76a22dfa.wav\";","export default __webpack_public_path__ + \"static/media/Pink_Noise_Low2High.cb03c5fe.wav\";","export default __webpack_public_path__ + \"static/media/Pink_Noise_High2Low.a6412cbc.wav\";","export default __webpack_public_path__ + \"static/media/Sine_Wave_Low2High.4b440d9c.wav\";","export default __webpack_public_path__ + \"static/media/Sine_Wave_High2Low.5efaa057.wav\";","//initialise variables, arrays, DOM elmnts etc that will be used throughout the audio part of the project\n\n    //IMPORT SOUND SOURCES (except sinewave\n    import whiteNoiseConstantSrc from \"../../../../Assets/Sounds/Noise/white-noise-tone.mp3\"\n    import pinkNoiseConstantSrc from \"../../../../Assets/Sounds/Noise/pink-noise-tone.mp3\"\n    import whiteNoiseH2LSrc from \"../../../../Assets/Sounds/Noise/White_Noise_High2Low.wav\"\n    import whiteNoiseL2HSrc from \"../../../../Assets/Sounds/Noise/White_Noise_Low2High.wav\"\n    import pinkNoiseL2HSrc from \"../../../../Assets/Sounds/Noise/Pink_Noise_Low2High.wav\"    \n    import pinkNoiseH2LSrc from \"../../../../Assets/Sounds/Noise/Pink_Noise_High2Low.wav\"\n    import sineWaveL2HSrc from \"../../../../Assets/Sounds/Noise/Sine_Wave_Low2High.wav\"\n    import sineWaveH2LSrc from \"../../../../Assets/Sounds/Noise/Sine_Wave_High2Low.wav\"\n\n\n    //GLOBAL VARIABLES \n    \n    //play-stop stuff\n    var playStopLmnt;\n    // current audio sources // eg [whiteNoiseNode] for noise && object with overall state information for sg \n    var sineWaveLowsNode; var sineWaveMidsNode; var sineWaveHighsNode; var sineWaveHigh2LowNode; var sineWaveLow2HighNode;\n    var sinewaveNodeArray; // array with sinewave nodes\n    var whiteNoiseAxSrc; var whiteNoiseNode; var pinkNoiseAxSrc; var pinkNoiseNode; \n    var whiteNoiseHigh2Low; var whiteNoiseLow2High; var pinkNoiseHigh2Low; var pinkNoiseLow2High;\n    var curAxSource; //refers to currently selected audio source (eg pink-noise)\n    //audio nodes - create nodes and connect together (not destination yet as that happens onclick play/stop)\\\n    var audioContext = new AudioContext;\n    var destination = audioContext.destination;\n    //noise filters\n    var lowPsFltr; var midNtchFltr; var highPsFltr;\n    var sgConfig = '';\n\n    function initSgConfing(stateType){ \n\n        //console.log(stateType); // stateType refers to the this.state.type (eg filters)\n        if (stateType == \"play-stop\"){ //check classList \n            playStopLmnt = document.querySelector(\".play-stop-btn\");\n        }\n        if (stateType == \"sources\"){ //querySelect relevant to the script this code is run in\n        //sinewave chain - has its own oscilattor for each \"frequency\", which uses a gain node to attenaute/deattenuate frequencies\n            //lows \n                sineWaveLowsNode = document.querySelector(\".audio-source.sine-wave-low.constant\");\n            //mids\n                sineWaveMidsNode = document.querySelector(\".audio-source.sine-wave-mid.constant\");\n            //highs\n                sineWaveHighsNode = document.querySelector(\".audio-source.sine-wave-high.constant\");\n            //high-to-low sweep\n                sineWaveHigh2LowNode = document.querySelector(\".audio-source.high-to-low.sine-wave\");\n            //high-to-low sweep\n                sineWaveLow2HighNode = document.querySelector(\".audio-source.low-to-high.sine-wave\");\n            //Arrays for sgConfig\n                sinewaveNodeArray = [sineWaveLowsNode,sineWaveMidsNode,sineWaveHighsNode];\n\n            sgConfig = {\n                character: \"constant\", // constant,high-to-low,low-to-high\n                AXSource: [\"white noise\",document.querySelector(\".mstr-audio-node\")],//0 is string and 1 is dom node\n                frequency: [\"low\",\"mid\",\"high\"],//remove in sweeping mode, revert back to \"low\",\"mid\",\"high\" when done \n                state: \"stopped\", //playing/stop state of audio \n            }\n        }\n    }\n\nexport { \n    sinewaveNodeArray, curAxSource, sgConfig, audioContext, destination, sineWaveLowsNode, \n    sineWaveMidsNode, sineWaveHighsNode, sineWaveHigh2LowNode, sineWaveLow2HighNode, whiteNoiseAxSrc, whiteNoiseNode,\n    pinkNoiseAxSrc,pinkNoiseNode, lowPsFltr, midNtchFltr, highPsFltr, initSgConfing, pinkNoiseHigh2Low,pinkNoiseLow2High,\n    whiteNoiseHigh2Low,whiteNoiseLow2High,pinkNoiseConstantSrc,whiteNoiseConstantSrc,whiteNoiseL2HSrc,whiteNoiseH2LSrc,\n    pinkNoiseL2HSrc,pinkNoiseH2LSrc,sineWaveH2LSrc,sineWaveL2HSrc,\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport '../Styles/globalStyles.scss'\n\n\n\n//TO DO:\n// if there is an element that has a child nav selected and user is currently browsing in a different nav and logo pressed and unpressed\n    //error\n    //you need to keep activelement on when there is an active tool \n    //look into this more deply\n\nclass Logo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n        //remove selected styling and revert back to page default\n        const resetIndex = () => {\n\n            //if only Audio has been selected\n            if(document.querySelector(\".Audio\").classList.contains(\"selected\") && !document.querySelector(\".drp-dwn-active-lmnt\")){\n\n                //remove selected styling from nav parent\n                document.querySelector(\".selected\").classList.add(\"unselected\");\n                [\"selectedImportant\",\"selected\",].forEach( item => document.querySelector(\".selected\").classList.remove(item));\n            }\n            //if Audio has been selected and user is browsing another nav\n            else if (document.querySelector(\".Audio.selectedImportant\") && document.querySelector(\".drp-dwn-active-lmnt\")){\n                document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");   \n\n                document.querySelectorAll(\".selected\").forEach( (item,index) => {\n                    item.classList.add(\"unselected\");\n                    item.classList.remove(\"selected\");\n                } );\n\n                document.querySelector(\".selectedImportant\").classList.remove(\"selectedImportant\");\n            }\n            //if only parent nav has been selected which isn't audio(eg vision)\n            else if (document.querySelector(\".selected\") && !document.querySelector(\".selectedImportant\") && document.querySelector(\".Audio\").classList.contains(\"unselected\")){\n\n                //remove selected styling from nav parent\n                document.querySelector(\".selected\").classList.add(\"unselected\");\n                [\"selected\",].forEach( (item) => document.querySelector(\".selected\").classList.remove(item));\n\n                //notify page this drp-dwn is no longer active\n                document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n                document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n                if(document.querySelector(\".drp-dwn-active\")) document.querySelector(\".drp-dwn-active\").classList.remove(\"drp-dwn-active\");\n            }\n            //if a drop down nav child has been selected (eg rgb of vision) and tab is either opened or closed\n            else if(document.querySelector(\".selectedImportant\") && document.querySelectorAll(\".selected\").length == 1){\n\n                //remove selected styling from nav parent\n                document.querySelector(\".selected\").classList.add(\"unselected\"); \n                [\"selectedImportant\",\"selected\",].forEach( item => document.querySelector(\".selected\").classList.remove(item)); \n                if (document.querySelector(\".drp-dwn-active-lmnt\")) document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n                \n                //notify page this drp-dwn is no longer active\n                if(document.querySelector(\".drp-dwn-active-lmnt\")) document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n                if(document.querySelector(\".drp-dwn-active\")) document.querySelector(\".drp-dwn-active\").classList.remove(\"drp-dwn-active\");\n\n                //remove styling from selected nav child (eg rgb of vision)\n                if(document.querySelector(\".drp-dwn-child.selected\")) document.querySelector(\".drp-dwn-child.selected\").classList.add(\"unselected\");\n                if(document.querySelector(\".drp-dwn-child.selected\")) document.querySelector(\".drp-dwn-child.selected\").classList.remove(\"selected\");\n            }\n            //if there is an element that has a child nav selected and user is currently browsing in a different nav \n            else if(document.querySelectorAll(\".selected\").length == 2 && document.querySelector(\".selectedImportant\")) {\n\n                //hide active drp-dwn\n                if(document.querySelector(\".drp-dwn-active-lmnt\"))  document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");                \n\n                //remove .selected from child nav and nav that doesnt have a child active\n                document.querySelectorAll(\".selected\").forEach( (item,index) => {\n                    item.classList.add(\"unselected\");\n                    item.classList.remove(\"selected\");\n                } );\n\n                //remove .drp-dwn related classes\n                if(document.querySelector(\".drp-dwn-active-lmnt\")) document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n                if(document.querySelector(\".drp-dwn-active\")) document.querySelector(\".drp-dwn-active\").classList.remove(\"drp-dwn-active\");\n\n                //remove .selectedImportant \n                document.querySelector(\".selectedImportant\").classList.remove(\"selectedImportant\")\n            }\n            //additional code for responsive mode\n            if (document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"opened\")){\n                document.querySelector(\"#adaptive-nav-wrap\").style = '';\n            }\n        }  \n        return (\n            <div className=\"z500 pointer\" id=\"site-logo\" onClick={() => resetIndex()}>\n                <span>AV</span>\n                <br></br>\n                <span>Tester</span>\n            </div>\n        );\n    }\n  }\n\n\n\n  export { Logo } ;","//if user clicks into youtube video tab\n    //!qs(\"on\")? //.on doesnt exist yet\n        //push class \"on\" into the iframe of the clicked video \n        //make variable prvVid to class 'on' of the first clicked video\n    //else - qs(\"on\")? - .on exists\n        //prvVid.src = prvVid.src //stop last vid\n        //remove .on from .on and add .on to Etarget\n//if user clicks a non youtube tab && prvVid.includes(\"youtube\") (so it has a link)\n    //prvVid.src = prvVid.src //stop last vid\n   // freqsweep,leftright, musicvid,pong \n\n    var prvVid = ''; //last video the user was watching\n    var trgtIsAv = (eTarget) => eTarget.parentElement.parentElement.parentElement.children[0].classList.contains(\"Audio&Vision\") || eTarget.parentElement.parentElement.parentElement.children[0].children[0].classList.contains(\"Audio&Vision\")    ;\n    export default function ytAudioChk(tabType,eTarget){\n\n        //debugger;\n\n        if(eTarget.innerHTML == \"Audio\"){\n\n        }\n\n        //if user clicks into youtube video tab\n        if(trgtIsAv(eTarget) === true /*.classList.contains(\"Audio&Vision\")*/ /*== true*/ /*&& eTarget.dataset.toolType != undefined*/){\n            switch(document.querySelector(\".av-tool.on\") == null){\n                //if a video hasn't been watched yet, add .on to the tab\n                case true:\n                    if(prvVid == ''){\n                        if(tabType.includes(\"Sync\")){ document.querySelector(\".av-tool.sync\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Sweep\")){ document.querySelector(\".av-tool.freqsweep\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Music\")){ document.querySelector(\".av-tool.musicvid\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Left\")){ document.querySelector(\".av-tool.leftright\").classList.add(\"on\") }\n                        \n                        prvVid = document.querySelector(\".av-tool.on\");\n                    }\n                    break;\n                //if a video has been watched \n                case false:\n                    if(prvVid != ''){\n                        prvVid.srcdoc = prvVid.srcdoc //stop last vid, \n                        document.querySelector(\".av-tool.on\").classList.remove(\"on\"); \n\n                        if(tabType.includes(\"Sync\")){ document.querySelector(\".av-tool.sync\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Sweep\")){ document.querySelector(\".av-tool.freqsweep\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Music\")){ document.querySelector(\".av-tool.musicvid\").classList.add(\"on\") }\n                        else if(tabType.includes(\"Left\")){ document.querySelector(\".av-tool.leftright\").classList.add(\"on\") }\n\n                        prvVid = document.querySelector(\".av-tool.on\");\n                        break;\n                    }\n            }\n        }\n        //if a user has watched a video and is clicking a non AV tab (eg rgb of vision), stop the video and remove .on from said videos iframe\n        else if(prvVid.src != undefined){ \n            if(prvVid.src.includes(\"youtube\")){\n                prvVid.srcdoc = prvVid.srcdoc //stop last vid, \n                document.querySelector(\".av-tool.on\").classList.remove(\"on\"); //remove on from prv tab and add .on to new tab \n                prvVid = '';\n            }\n        }\n    }\n","import {displayNoneToggle} from '../Tools/codeTools'\nimport ytAudioHandle from './ytAudioStop'\n\n//while .tool-element-wrap == null, do nothing, when it exists, proceed with code\n// function loadBuffer(domLmnt){\n//     //debugger;\n//     var loading = setInterval(() => {\n//         if(domLmnt !== null){\n//             clearInterval(loading);\n//         }\n//     }, 5000);\n// }\n\nvar curNavState = { } //object defining state of navigation (eg what tool is selected and what are those properties etc)\nfunction initCurNavState(){\n        curNavState = { \n            CurrentToolString: \"Info/About\", //string of tool (ParentNav/ChildNav)\n            CurrentToolPage: document.querySelector(\".info-about-wrap\"), //qs of tool page wrap (eg vision-RGB-wrap)\n            currentToolNav: [document.querySelector(\".main-nav-link.Info\"),\"init\"], //init is initial lp//document.queryselector(\".drp-dwn-child.selected\")\n            Browsing: new Array,//becomes qs of browsing dad nav (eg \"vision\", visions element)\n    }\n}\n\nvar prvSlctdNav = ''; //refers to previously selected navigation parent (eg Vision, which has 3 children navs)\n\n//update Browsing state (unless \"click\" is audio, then nav to audio page)\nfunction updateBrowsingState(e){\n    //update curNavState\n    setTimeout(() => {\n        //debugger;\n\n        switch(e.target.parentElement.classList.contains(\"Audio\")){ \n\n            case(true): //MASTER AUDIO SWITCH CODE\n\n                //check if audio has lazy loaded yet\n                var hasLoaded = () => {\n                    if(document.querySelector(\".audio-tool-wrap\")){ \n                        return true\n                    } else { return false }\n                }\n\n            if(hasLoaded()){\n                ytAudioHandle(e.target.dataset.toolType,e.target)\n                //debugger;\n                //ytAudioHandle(e.target.dataset.toolType,e.target)\n                    //NON AUDIO-NAV SELECTED -> AUDIO NAV SELECTED\n                    if (curNavState.Browsing.length > 1 && prvSlctdNav != e.target){\n                        \n                        prvSlctdNav = e.target;\n                        curNavState.Browsing = new Array;\n                        [e.target.innerText, e.target.parentElement].forEach((item) => {\n                            curNavState.Browsing.push(item);\n                        })\n                    }\n                    //NO NAV SELECTED -> AUDIO NAV SELECTED\n                    else if(curNavState.Browsing.length == 0){ \n                        [e.target.innerText, e.target.parentElement].forEach((item) => {\n                            prvSlctdNav = e.target;\n                            curNavState.Browsing.push(item);\n                        })   \n                    }\n                    //AUDIO SWITCH FUNCTION\n                        //update tool string \n                        curNavState.CurrentToolString = e.target.innerText \n                        //update tool nav\n                        curNavState.currentToolNav = new Array;\n                        curNavState.currentToolNav.push(curNavState.Browsing[1]);\n                        curNavState.Browsing = new Array;\n                        //update tool page\n                        //displayNone curNavState.CurrentToolPage (so last tool) & remove element w/ classList of selected-tool-page of said class\n                        displayNoneToggle(curNavState.CurrentToolPage);\n                        curNavState.CurrentToolPage.classList.remove(\"selected-tool-page\");\n                        //qs the data thats in e.target, use that to select the tool-page-wrap u need to remove display-none & modify classlist & state obj\n                        displayNoneToggle(document.querySelector(\".audio-tool-wrap\"));\n                        document.querySelector(\".audio-tool-wrap\").classList.add(\"selected-tool-page\")\n                        curNavState.CurrentToolPage = document.querySelector(\".selected-tool-page\");\n                    }\n                    else if(hasLoaded() == false){\n                        setTimeout(() => {\n                            updateBrowsingState(e);\n                            console.log(\"check for if audio has loaded again\")\n                        }, 100);\n                    }\n\n\n                break;\n            case(false): //UPDATE BROWSING STATE FOR NON AUDIO NAVS\n                //NAV SELECTED -> NEW NAV SELECTED\n                if (curNavState.Browsing.length > 1 && prvSlctdNav != e.target){\n                    prvSlctdNav = e.target;\n                    curNavState.Browsing = new Array;\n                    [e.target.innerText, e.target.parentElement].forEach((item) => {\n                        curNavState.Browsing.push(item);\n                    })\n                }\n                //NAV SELECTED -> NO NAV SELECTED\n                else if(curNavState.Browsing.length > 1 && prvSlctdNav == e.target){\n                    curNavState.Browsing = new Array;\n                }\n                //NO NAV SELECTED -> NAV SELECTED\n                else if(curNavState.Browsing.length == 0){ \n                    [e.target.innerText, e.target.parentElement].forEach((item) => {\n                        prvSlctdNav = e.target;\n                        curNavState.Browsing.push(item);\n                    })\n                }\n                break;\n        }\n\n    }, 100);\n}\n\n//UPDATE TOOL PAGE, TOOL STRING & TOOLNAV (when user clicks child nav)\nfunction updateCurrentState(e){\n//debugger;\n\n    //determines whether or not vision or AV has lazy loaded yet, if it has it returns true vice verse - if false simply run function again in 100ms\n    var navType = () => {\n        if(e.target.dataset.toolType == \"Greyscale\" || e.target.dataset.toolType == \"RGB Pattern\" || e.target.dataset.toolType ==  \"Solid Color\"){\n            if(document.querySelector(\".vision-greyscale-wrap\")){\n                return true\n            } else { return false }\n        }\n        else if(e.target.dataset.toolType == \"AV Sync Test\" || e.target.dataset.toolType ==  \"Frequency Sweep\" || e.target.dataset.toolType ==  \"Music Video\" || e.target.dataset.toolType == \"Left Right Test\"){\n            if(document.querySelector(\".AV-sync-wrap\")){\n                return true\n            } else { return false }\n        }\n    }\n//debugger;\n    if (e.target.innerText != \"Audio\" && e.target.classList.contains(\"drp-dwn-child\") && navType() \n    || e.target.dataset.toolType == \"Instructions\" || e.target.dataset.toolType == \"About\"){ //if target not audio tool\n\n        //populate curNavState.toolString (get previous browsing string and e.target.innerText)\n        curNavState.CurrentToolString = `${curNavState.Browsing[0]}/${e.target.innerText}`;   \n\n        //populate curNavState.toolNav with parent and child nav (clearing previous .browsing and .toolNav data)\n        curNavState.currentToolNav = new Array;\n        [curNavState.Browsing[1],e.target].forEach(item => curNavState.currentToolNav.push(item));\n        curNavState.Browsing = new Array;\n\n        //switching tool views (eg vision rgb -> av sync)\n            \n            //displayNone curNavState.CurrentToolPage (so last tool) & remove element w/ classList of selected-tool-page of said class\n            displayNoneToggle(curNavState.CurrentToolPage);\n            curNavState.CurrentToolPage.classList.remove(\"selected-tool-page\");\n            \n            ytAudioHandle(e.target.dataset.toolType,e.target)//handles turning off/on youtube audio when needed\n\n            //show the selected tool (remove .display-none etc)\n            function apndVsnImg(visionTool){\n                displayNoneToggle(visionTool);\n                visionTool.classList.add(\"selected-tool-page\")\n                curNavState.CurrentToolPage = document.querySelector(\".selected-tool-page\");\n            }\n\n            //qs the data thats in e.target, use that to select the tool-page-wrap u need to remove display-none & modify classlist & state obj\n            function checkImg(data,query){ debugger;\n                if(e.target.dataset.toolType == data){\n                    //if element has been injected into the browser yet, append tool (eg greyscale)\n                    if(query){\n                        apndVsnImg(query);\n                    //if element has not yet loaded into browser, check again in 50ms\n                    } else if (!query){\n                        setTimeout(() => {\n                            checkImg();\n                        }, 50);\n                    }\n                }\n            }\n\n            \n            //Vision Tools\n                checkImg(\"Greyscale\",document.querySelector(\".vision-greyscale-wrap\")); // greyscale\n                checkImg(\"RGB Pattern\",document.querySelector(\".vision-RGB-wrap\")); // RGB\n                checkImg(\"Solid Color\",document.querySelector(\".vision-solid-wrap\")); // Solid Color\n\n            //AV Tools\n                checkImg(\"AV Sync Test\",document.querySelector(\".AV-sync-wrap\")); // AV Sync\n                checkImg(\"Frequency Sweep\",document.querySelector(\".AV-freqsweep-wrap\")); // Frequency Sweep\n                checkImg(\"Music Video\",document.querySelector(\".AV-musicvid-wrap\")); // Music Video\n                checkImg(\"Left Right Test\",document.querySelector(\".AV-LR-wrap\")); // Leftright test\n\n            //Info options\n                checkImg(\"Instructions\",document.querySelector(\".info-instructions-wrap\")); // Instructions\n                checkImg(\"About\",document.querySelector(\".info-about-wrap\")); // About\n                checkImg(\"Contact\",document.querySelector(\".info-contact-wrap\")); // Contact\n                checkImg(\"Privacy Policy\",document.querySelector(\".info-privacy-wrap\")); // Privacy Policy\n    } \n    else if(navType() == false){\n        //debugger\n        setTimeout(() => {\n            updateCurrentState(e)\n        }, 100);\n    }\n}\n\n//master state set \nexport {updateBrowsingState, updateCurrentState, initCurNavState}\n\n\n","import React from 'react'\nimport {makeSelectedNav} from '../Components/Tools/codeTools'\nimport {updateCurrentState} from './NavBarJsFunctions/DisplaySwitching'\n\n//DROPDOWN NAVIGATION FOR NAVBAR NAV CHILDREN (EG RGB OF VISION)\nclass DropdownNav extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n        this.clsDrpDwn = this.clsDrpDwn.bind(this);\n        this.liConfig = this.liConfig.bind(this);\n    }\n\n    clsDrpDwn(){\n      document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n      document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n      if(document.querySelector(\".drp-dwn-active\")) document.querySelector(\".drp-dwn-active\").classList.remove(\"drp-dwn-active\");\n    }\n\n    liConfig(e){\n      //debugger;\n      updateCurrentState(e); //update state object (state of where navigation is at + display switching)\n      makeSelectedNav(e); this.clsDrpDwn();\n      \n      if( window.innerWidth < 1000 ){\n        document.querySelector(\"#adaptive-nav-wrap\").style.right == \"\" ?\n        document.querySelector(\"#adaptive-nav-wrap\").style = \"right: 0px !important\" : \n        document.querySelector(\"#adaptive-nav-wrap\").style = \"\";\n        document.querySelector(\".adptv-nav-tab\").style = \"\";\n      }\n    }\n\n//the the list count depend on how many how many li's there will be, so how many ddrowndown menu options\n    render() {\n      var _adptvNavWrap = document.querySelector(\"#adaptive-nav-wrap\");\n      //iterate over the <dropDownNav/> props and turn them into an array\n      //later to be mapped through and returned as li for designated drop down\n      var propsArray = [];\n      for (var key of Object.keys(this.props)){\n        propsArray.push(this.props[key]);\n      }\n\n      return (\n          <div className=\"drp-dwn-nav-wrap display-none\">\n            <ul className=\"drp-dwn-nav\">\n              {propsArray.map( (option, index) => (\n                <li className=\"drp-dwn-child unselected tab-cls-trgr\" data-tool-type={propsArray[index]} key={index} onClick={(e) => this.liConfig(e) }> {option} \n                </li>\n              ))}\n            </ul>\n          </div>\n      );\n    }\n  }\n  export { DropdownNav } ;","import {noSpace,displayNoneToggle,makeSelectedNav} from '../Tools/codeTools'\n//variables for both functions\nvar prvSlctdNav = ''; //refers to previously selected navigation parent\n\n//code for adptvTabFunction\nfunction adptvTabCode(e){\n\n    //prvSelectedNav equates to the dropdown wrap\n    const _adptvNavWrap = document.querySelector(\"#adaptive-nav-wrap\");\n    const adptvTab = document.querySelector(\".adptv-nav-tab\");\n    // CLOSED => OPEN\n    if (_adptvNavWrap.classList.contains(\"closed\")) {\n        _adptvNavWrap.style=\"right: 0px !important\"; \n        _adptvNavWrap.classList.remove(\"closed\");\n        _adptvNavWrap.classList.add(\"opened\");\n        adptvTab.style= \"right: 140px\"\n    }\n    //OPEN => CLOSED (closes via audio button or other child buttons (eg vision nav child))\n    else if (e.target.innerText == \"Audio\" || e.target.classList.contains(\"tb-cls-trgr\")){\n        _adptvNavWrap.style = \"\";\n        setTimeout(() => {\n            _adptvNavWrap.style = \"z-index: -100; visibility: hidden;\";\n        }, 500); \n        _adptvNavWrap.classList.remove(\"opened\");\n        _adptvNavWrap.classList.add(\"closed\");\n        adptvTab.style= \"\"\n\n        //if closed via adptv tab and a dropdown has been selected\n        if(prvSlctdNav != '' && e.target.classList.contains(\"adptv-nav-tab\")) {\n            if(!prvSlctdNav.parentElement.children[0].children[0].classList.contains(\"Audio\")){\n                //hide all navs with \"\" selected (incase user has one important tab and is browsing another)\n                document.querySelectorAll(\".selected\").forEach( (item) => {\n                    item.classList.remove(\"selected\");\n                    item.classList.add(\"unselected\");\n                });\n                if (document.querySelector(\".drp-dwn-active-lmnt\")) document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\");\n            }\n            if (!prvSlctdNav.classList.contains(\"display-none\"))displayNoneToggle(prvSlctdNav); \n            prvSlctdNav = '';                        \n        }\n\n        //if audio is clicked with another menu already open\n        if(e.target.innerText == \"Audio\" && document.querySelector(\".drp-dwn-active-lmnt\")){\n            document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n        }\n    }\n\n    //open-close dropdown\n    if(e.target.classList.contains(\"tool-name\") && e.target.innerText != \"Audio\"){\n        //if another drp down is already open, close that drop down (general purpose)\n        if(prvSlctdNav != '' && e.target.parentElement.classList.contains(\"unselected\") && document.querySelector(\".drp-dwn-active-lmnt\")){\n\n            //I THINK U CAN DELETE THIS\n            //if in a responsive view and user has just come back to nav from clicking a nav & clicks prv nav parent\n            // don't displayNoneToggle\n            // if( document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"opened\")\n            //  && document.querySelector(\".selectedImportant\") != null && document.querySelector(\".drp-dwn-active-lmnt\") != null){\n            //     //don't do anything (for now)\n            // } else {\n            //     displayNoneToggle(prvSlctdNav);\n            // }\n\n            document.querySelector(\".drp-dwn-active-lmnt\").classList.remove(\"drp-dwn-active-lmnt\")\n\n            displayNoneToggle(prvSlctdNav);\n            // if (document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"opened\") && document.querySelector(\".drp-dwn-active-lmnt\")){\n            //     document.querySelector(\".drp-dwn-active-lmnt\").classList.add(\"display-none\");\n            // }\n        }\n        //clicking into a drop down with no others open\n        if(e.target.parentElement.classList.contains(\"unselected\")){\n            displayNoneToggle(e.target.parentElement.parentElement.parentElement.children[1]);\n            prvSlctdNav = e.target.parentElement.parentElement.parentElement.children[1];\n            prvSlctdNav.classList.add(\"drp-dwn-active-lmnt\")\n        }\n        //clicking out of drop down (so clicking the drop down thats currently active)\n        else if(e.target.parentElement.classList.contains(\"selected\")){\n            displayNoneToggle(e.target.parentElement.parentElement.parentElement.children[1]);\n            //if(document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"opened\")) prvSlctdNav.classList.remove(\"drp-dwn-active-lmnt\");\n            if(document.querySelector(\"#adaptive-nav-wrap\").classList.contains(\"closed\") || !document.querySelector(\".selectedImportant\")) prvSlctdNav = '';\n        }\n    }\n    // else if (e.target.innerText == \"Audio\" && e.target.parentElement.classList.contains(\"unselected\")){\n    //     prvSlctdNav = e.target.parentElement.classList.contains(\"unselected\")\n    // }\n}\n\n//code for dsktpDrpDwnFunct\nfunction dsktpDrpDwnCode(e){\n    var navWrap = document.querySelector(\"#dsktp-nav-lst\");\n    let selectedDrpDwn = e.target.parentElement.parentElement.children[1];\n\n    switch(e.target.innerText == \"Audio\"){\n        case false: {\n            \n            //if drop down is not currently active\n            if(!navWrap.classList.contains(\"drp-dwn-active\")){\n                selectedDrpDwn.classList.remove(\"display-none\");\n                navWrap.classList.add(\"drp-dwn-active\");\n                prvSlctdNav = e.target.parentElement.parentElement.children[1];\n            }\n            //if drop down is currently active \n            else if(navWrap.classList.contains(\"drp-dwn-active\")) {\n                \n                // prvSlctdNav.classList.add(\"display-none\");\n                if(selectedDrpDwn.classList.contains(\"display-none\") && prvSlctdNav!==selectedDrpDwn){\n                    selectedDrpDwn.classList.remove(\"display-none\");\n                    prvSlctdNav.classList.add(\"display-none\");\n                    prvSlctdNav = e.target.parentElement.parentElement.children[1];\n                }\n                //if user is clicking out of selected nav\n                else { \n                    selectedDrpDwn.classList.add(\"display-none\");\n                    navWrap.classList.remove(\"drp-dwn-active\");\n                    //prvSlctdNav = e.target.parentElement.parentElement.children[1];\n                }\n            }\n            break;\n        }\n        case true: {\n            if (prvSlctdNav !== \"\"){\n                prvSlctdNav.classList.add(\"display-none\");\n                navWrap.classList.remove(\"drp-dwn-active\");\n            }\n            break;\n        }\n    }\n}\n\nexport{adptvTabCode}\nexport {dsktpDrpDwnCode}","import React from 'react'\n//import {DropdownNav} from './DwNav'\nimport {noSpace,displayNoneToggle,makeSelectedNav} from './Tools/codeTools'\nimport {Logo} from './Logo'\nimport{DropdownNav} from './DwNav'\nimport {dsktpDrpDwnCode,adptvTabCode} from './NavBarJsFunctions/NavigationCode'\nimport {updateBrowsingState,initCurNavState} from './NavBarJsFunctions/DisplaySwitching'\n//......................................................................................\n//GLOBAL VARIABLES AND FUNCTIONS\n\n//object that sets the current state of the navbar.\n// var curNavState = {\n//     CurrentToolString: \"Info/About\",\n//     CurrentToolPage: document.querySelector(\".info-about-wrap\"),\n//     currentToolNav: [document.querySelector(\".main-nav-link.Info\"),\"init\"], //init is initial lp//document.queryselector(\".drp-dwn-child.selected\")\n//     Browsing: new Array,//becomes qs of browsing dad nav\n// }\n\n\n//......................................................................................\n\n//PARENT NAV BAR\n    class ParentNavBar extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = { }\n            this.navClickFunct = (e) => {\n                if (window.innerWidth < 1000){\n                    //debugger;\n                    this.adptvTabFunct(e);\n                }\n                else {\n                    //debugger;\n                    this.dsktpDrpDwnFunct(e);\n                }\n            }\n        //ADAPTIVE FUNCTION (open close adaptive tab function)\n            this.adptvTabFunct = (e) => {\n                adptvTabCode(e);\n                if (e.target.parentElement.classList.contains(\"main-nav-link\")) updateBrowsingState(e);\n            }\n        //DESKTOP DROPDOWN FUNCTION (show drop down in desktop mode)\n            this.dsktpDrpDwnFunct = (e) => { \n                dsktpDrpDwnCode(e);\n                updateBrowsingState(e);\n            }\n        }\n        //initial object that tracks navigation (curNavState)\n        componentDidMount(){\n            initCurNavState();\n        }\n\n        render(){\n            return (\n                \n                <div>\n                    <div className=\"adptv-nav-tab tb-cls-trgr\" onClick={(e) => this.navClickFunct(e)}></div>\n                    {(window.innerWidth > 1000) && <div id=\"main-nav-wrap\" aria-label=\"Tool selection\">\n                        <nav id=\"desktop-nav\" style={{position: \"relative\",padding: \"0px 20px\"}}>\n                            <div className=\"rSZoid\"></div>\n                            <div className=\"rSZoid\" style={{left: \"-80px\", top: \"0\"}}></div>\n                            <div className=\"rBZoid\"></div>\n                            <div className=\"rBZoid\" style={{left: \"-60px\", top: \"0\", transform: \"rotateY(180deg)\"}}></div>\n                            <ul id=\"dsktp-nav-lst\" style={{display: \"flex\"}}>\n                                <MainNavChild type=\"dsktp\" toolTitle=\"Audio\" fontSize=\"2.3rem\" dropDown=\"false\" onClick={(e) => this.navClickFunct(e)}/>  \n                                <MainNavChild type=\"dsktp\" toolTitle=\"Vision\" fontSize=\"2.3rem\" dropDown=\"true\" onClick={(e) =>this.navClickFunct(e)}/>\n                                <MainNavChild type=\"dsktp\" toolTitle=\"Audio &#38; Vision\" extra=\"position: relative; top: 3.3px;\" fontSize=\"1.5rem\" dropDown=\"true\" onClick={(e) =>this.navClickFunct(e)}/>\n                                <MainNavChild type=\"dsktp\" toolTitle=\"Info\" fontSize=\"2.3rem\" dropDown=\"true\" onClick={(e) =>this.navClickFunct(e)}/>\n                            </ul>\n                        </nav>\n                    </div>}\n                    {(window.innerWidth < 1000) && <div id=\"adaptive-nav-wrap\" className=\"closed\" ref={this.adptvNavWrap} style={{zIndex: \"-100\",visibility: \"hidden\"}}>\n                        <nav id=\"adaptive-nav\">\n                            <ul id=\"adptv-nav-lst\" style={{display: \"flex\"}}>\n                                <MainNavChild type=\"adptv\" tabClose=\"tb-cls-trgr\" toolTitle=\"Audio\" fontSize=\"2rem\" onClick={(e) => this.navClickFunct(e)}/>\n                                <MainNavChild type=\"adptv\" tabClose=\"tb-cls-trgr\" toolTitle=\"Vision\" fontSize=\"2rem\" onClick={(e) => this.navClickFunct(e)}/>\n                                <MainNavChild type=\"adptv\" tabClose=\"tb-cls-trgr\" toolTitle=\"Audio &#38; Vision\" style={{position: \"relative;\", top: \"3.3px\"}}fontSize=\"1.2rem\" onClick={(e) => this.navClickFunct(e)}/>\n                                <MainNavChild type=\"adptv\" tabClose=\"tb-cls-trgr\" toolTitle=\"Info\" fontSize=\"2rem\" onClick={(e) => this.navClickFunct(e)}/>\n                            </ul>\n                        </nav>\n                    </div>}\n                </div>\n            );\n        }\n    }\n\n  //PARENT NAV CHILDREN (Nav options within the desktop (main) navigation)\n  class MainNavChild extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n    render() {\n\n    //function that returns an array of the options into dropDownNav depending on the navs toolTitle\n    const ConfigNavTools = () => {\n        if (this.props.toolTitle === \"Vision\"){\n            return <DropdownNav optionOne=\"Greyscale\" optionTwo=\"RGB Pattern\" optionThree=\"Solid Color\"/>\n        }\n        else if (this.props.toolTitle === \"Audio & Vision\"){\n            return <DropdownNav optionOne=\"AV Sync Test\" optionTwo=\"Frequency Sweep\" optionThree=\"Music Video\" OptionFour=\"Left Right Test\" />\n        }\n        else if (this.props.toolTitle === \"Info\"){\n            return <DropdownNav optionOne=\"Instructions\" optionTwo=\"About\" /*optionThree=\"Privacy Policy\"*//>\n        }\n    }\n\n    //Configure the dropdowns for main\n        let insertDropDown;\n        if (this.props.dropDown === \"true\"){\n            insertDropDown = ConfigNavTools()\n        }\n        //configure the dropdowns for adaptive \n        let adptvDropDown;\n        if (this.props.type == \"adptv\" && this.props.toolTitle!=\"Audio\"){\n            adptvDropDown = ConfigNavTools();\n        }\n\n        const childStyles = {\n            alignItems: \"center\"    ,\n            display: \"flex\",\n            flexDirection: \"column\",\n            fontSize: this.props.fontSize,\n            height: \"40px\",\n            justifyContent: (!this.props.toolTitle == \"Audio&Vision\") ? \"center\" : \"flex-end\",\n            padding:0,\n            margin:0,\n               \n            // width: \"150px\",\n        }\n\n        return (\n            <li className=\"navChildWrap\" aria-label=\"Tool sub menu\">\n                <ul style={childStyles} > \n                    <li className={\"main-nav-link unselected \" + noSpace(this.props.toolTitle)} onClick={(e) => makeSelectedNav(e)}>\n                        <span className={\"tool-name\"} onClick={this.props.onClick}>{this.props.toolTitle}</span>\n                    </li>\n                    {insertDropDown}\n                </ul>\n                {adptvDropDown}\n            </li>\n        );\n    }  \n}\n\nexport { ParentNavBar } ;","import React from 'react'\nimport {ParentNavBar} from './Navbar'\n//import {Logo} from './Logo'\n\n\nclass Header extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n      return (\n          <div>\n              <header>\n                  { /*<Logo/>*/ }\n                  <ParentNavBar/>\n              </header>\n          </div>\n      );\n    }\n  }\n\n\n\n  export { Header } ;","import React from 'react';\nimport {faInstagram, faGithub} from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst instaIcon = <FontAwesomeIcon icon={faInstagram} size=\"3x\" color=\"black\" style={{padding:\"0px 7px\"}} color={\"darkgrey\"}/>\nconst githubIcon = <FontAwesomeIcon icon={faGithub} size=\"3x\" color=\"black\" style={{padding:\"0px 7px\"}} color={\"darkgrey\"}/>\n\nclass Info_Footer extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = { }\n  }\n\n  render() {\n\n    return (\n        <div>\n          <footer className=\"info-about\" style={this.props.style}>\n            <ul className=\"about-icon-ul\">\n              <li className=\"about-icon-wrap\">\n                <a href=\"https://koalacode.com.au\">Koalacode Development</a><span> 2021</span>\n              </li>\n              <li className=\"about-icon-wrap\"> \n                <a href=\"https://instragram.com\" target=\"blank\" title=\"https://www.instagram.com/__stepfire__/\">{instaIcon}</a>\n                <a href=\"https://github.com/joshem96\" target=\"blank\" title=\"https://github.com/joshem96\">{githubIcon}</a>\n              </li>\n            </ul>\n          </footer>\n        </div>\n    );\n  }\n}\n \nclass Info_About extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    render() {\n      return (\n          <div>\n              <div className=\"info-about-wrap selected-tool-page\">\n                <div className=\"info-about-p-wrap\">\n                  <div className=\"info-about-p\">\n                  <h1>Online Audio And Monitor Test</h1>\n                    <p>Here you can find audio and monitor testing tools to test your monitor and your speakers.\n                    Choose either an audio or monitor testing tool from the navigation bar above to start testing your system.\n                    </p>\n                  </div>\n                </div>\n                {/* <Info_Footer/> */}\n              </div>\n          </div>\n      );\n    }\n  }\n\n  export {Info_About,Info_Footer}","import React, { lazy, Suspense } from 'react'\nimport { Info_About } from './Info_About_Option';\nimport { Info_Contact } from './Info_Contact_Option';\n//import { Info_Instructions } from './Info_Instructions_Option';\nimport { Info_Privacy } from './Info_Privacy_Option';\nimport { Info_Footer } from './Info_About_Option';\nconst Info_Instructions = lazy(() => import('./Info_Instructions_Option'));\n\nclass InfoWorkSpace extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    render() {\n        \n      return (\n          <div>\n              <div className=\"info-WS-wrap\" aria-label=\"Instructions and other information\">\n                <Suspense fallback={<p>..loading..</p>}>\n                  <Info_Instructions/>\n                </Suspense>\n                <Info_About/>\n                {/*<Info_Contact/>*/}\n                {/*<Info_Privacy/>*/}\n                <Info_Footer style={{zIndex: \"-1000\"}}/>\n              </div>\n          </div>\n      );\n    }\n  }\n\n  export {InfoWorkSpace}","import React from 'react'\n\nclass Info_Contact extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    render() {\n        var testStyle = {\n            background: \"indigo\",\n            width: \"250px\",\n            height: \"250px\",\n        }\n        \n      return (\n          <div>\n              <div className=\"info-contact-wrap display-none\" style={testStyle} >\n                contac the dev\n              </div>\n          </div>\n      );\n    }\n  }\n\n  export {Info_Contact}","import React from 'react'\n\nclass Info_Privacy extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { }\n    }\n\n    render() {\n        var testStyle = {\n            background: \"orange\",\n            width: \"250px\",\n            height: \"250px\",\n        }\n        \n      return (\n          <div>\n              <div className=\"info-privacy-wrap tool-element-wrap display-none\" style={testStyle} >\n                ooh scary\n              </div>\n          </div>\n      );\n    }\n  }\n\n  export {Info_Privacy}","import React, { lazy, Suspense } from 'react'\nimport { initSgConfing } from './Audio/Audio_Functions/Audio_Sg_Init';\n// import { AudioWorkSpace } from './Audio/audio_WS';\n// import { AVWorkSpace } from './AV/AV_WS';\nimport { InfoWorkSpace } from './Info/Info_WS';\n// import { VisionWorkSpace } from './Vision/vision_WS';\n//import { ErrorBoundry } from '../Tools/errorBoundry.js';\n\nconst AudioWorkSpace = lazy(() => import('./Audio/audio_WS'));\nconst AVWorkSpace = lazy(() => import('./AV/AV_WS'));\nconst VisionWorkSpace = lazy(() => import('./Vision/vision_WS'));\n\nvar initMount = false\n\nclass ParentWorkSpace extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            Audio: false,\n            Vision: false,\n            AV: false,\n            InfoWorkSpace: true,\n        }\n    }\n\n    renderLoader = () => <p>loading</p>;\n\n    changeState(tool){\n        //debugger;\n        if(tool.innerHTML === \"Audio\" || tool.parentElement.classList.contains(\"drp-dwn-nav\")){\n            if(tool.innerHTML === \"Audio\") { this.setState({Audio: true}); console.log(\"audio now true \" + this.state); }\n            else if (tool.innerText == \"Greyscale\" || tool.innerText == \"RGB Pattern\" || tool.innerText == \"Solid Color\") { this.setState({Vision: true}) }\n            else if (tool.innerText == \"AV Sync Test\" || tool.innerText == \"Frequency Sweep\" || tool.innerText == \"Music Video\" || tool.innerText == \"Left Right Test\") { \n                this.setState({AV: true}) }\n        }\n    }\n    componentDidMount(){\n        //only run below code on initial mount, not when component is rerun for lazy loading purposes\n        if (!initMount){\n            document.querySelectorAll(\".drp-dwn-child\").forEach(item => item.addEventListener(\"click\",(e) => this.changeState(e.target)) );\n            document.querySelectorAll(\".main-nav-link.Audio\").forEach(item => item.children[0].addEventListener(\"click\",(e) => this.changeState(e.target)) );\n\n            //attach jquery-UI CDN, which needs initial jquery CDN to be loaded first (this allows slider manipulation)\n            // const scriptTwo = document.createElement(\"script\");\n            // scriptTwo.src = \"https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/jquery-ui.min.js\";\n            // document.body.appendChild(scriptTwo);  \n\n            initMount = true;\n        }  \n    }\n        // componentWillMount(){\n        //     if(!initMount){\n        //         //initally attach jquery CDN - as the audio range uses jquery\n        //         // const scriptOne = document.createElement(\"script\");\n        //         // scriptOne.src = \"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\";\n        //         // document.body.appendChild(scriptOne);\n        //     }\n        // }\n\n    render() {\n    const style = {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"fixed\"\n    }\n\n      return (\n          <div className=\"Parent-WS-Wrap\" style={style}>\n              \n              {this.state.Audio && <Suspense fallback={this.renderLoader()}> <AudioWorkSpace/> </Suspense>}\n\n              {this.state.Vision && <Suspense fallback={this.renderLoader()}> <VisionWorkSpace/> </Suspense>}\n              \n              {this.state.AV && <Suspense fallback={this.renderLoader()}> <AVWorkSpace/> </Suspense>}\n              <InfoWorkSpace/>\n          </div>\n      );\n    }\n  }\n\n  export {ParentWorkSpace}","import logo from './logo.svg';\nimport './App.css';\nimport {Header} from './Components/Header'\nimport '../src/Styles/globalStyles.scss'\nimport { ParentWorkSpace } from './Components/workSpaceComps/Parent_WS';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <ParentWorkSpace/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}